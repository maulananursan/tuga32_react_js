{"version":3,"sources":["halaman/header_fungsi1.js","halaman/footer_fungsi2.js","halaman/foto_class1.js","halaman/deskripsi_class2.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","propsheader","Footer","className","propsfooter","Foto","state","url","alamat_gambar","deskripsi","ubahDeskripsi","bind","e","preventDefault","this","setState","document","getElementById","innerHTML","src","alt","onClick","id","Component","PesanAlert","judul","manfaat","ubahket","App","border","width","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wNAYeA,MATf,SAAgBC,GACf,OACC,gCACD,4BAAKA,EAAMC,eCKGC,EATA,SAACF,GACf,OACC,6BACA,gCACA,uBAAGG,UAAU,OAAQH,EAAMI,gB,mCC4BdC,E,kDA/Bd,WAAYL,GAAO,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACZC,IAAK,EAAKP,MAAMQ,cAChBC,UAAW,0CAEZ,EAAKC,cAAc,EAAKA,cAAcC,KAAnB,gBANF,E,0DASJC,GACbA,EAAEC,iBACFC,KAAKC,SAAS,CAACN,UAAW,sDAE1BO,SAASC,eAAe,YAAYC,UAAY,2G,+BAGxC,IAAD,OACP,OACC,6BACA,gCACA,yBAAKf,UAAU,WAAWgB,IAAKL,KAAKR,MAAMC,IAAKa,IAAK,oBACpD,2BAAIN,KAAKR,MAAMG,WACf,4BAAQN,UAAU,SAASkB,QAAS,SAACT,GAAD,OAAM,EAAKF,cAAcE,KAA7D,YACA,uBAAGU,GAAG,mB,GAxBUC,aC2BJC,E,kDA1Bd,WAAYxB,GAAO,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACZmB,MAAO,EAAKzB,MAAMyB,MAClBC,QAAS,+GAGV,EAAKC,QAAQ,EAAKA,QAAQhB,KAAb,gBAPI,E,oDAUVC,GACPA,EAAEC,iBACFC,KAAKC,SAAS,CAACW,QAAS,6K,+BAGf,IAAD,OACP,OACC,yBAAKvB,UAAU,WACf,2BAAIW,KAAKd,MAAMyB,OACf,2BAAIX,KAAKR,MAAMoB,SACf,4BAAQvB,UAAU,SAASkB,QAAS,SAACT,GAAD,OAAM,EAAKe,QAAQf,KAAvD,qB,GArBqBW,aCwBVK,MAlBf,WACE,OACE,yBAAKzB,UAAU,cACf,2BAAO0B,OAAO,KAAK,+BAAO,4BAAI,+BAAsB,4BAAI,8BAAc,+BAAO,4BACvE,wBAAIC,MAAO,OACV,kBAAC,EAAD,CAAQ7B,YAAY,aACrB,kBAAC,EAAD,CAAMO,cAAc,6CAEpB,4BACD,kBAAC,EAAD,CAAYiB,MAAM,2BAInB,kBAAC,EAAD,CAAQrB,YAAY,6BCTR2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtB,SAASC,eAAe,SDyHpB,kBAAmBsB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.dc819057.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Header(props) {\r\n\treturn(\r\n\t\t<center>\r\n\t<h1>{props.propsheader}</h1>\r\n\t</center>\r\n\t)\r\n}\r\n\r\n\r\nexport default Header","import React from 'react';\r\n\r\nconst Footer = (props) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t<center>\r\n\t\t<p className=\"cpr\" >{props.propsfooter}</p>\r\n\t\t</center>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Footer","import React, { Component } from 'react';\r\n\r\nclass Foto extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\turl: this.props.alamat_gambar,\r\n\t\t\tdeskripsi: 'Konsentrasi dan Fokus dengan lingkaran'\r\n\t\t}\r\n\t\tthis.ubahDeskripsi=this.ubahDeskripsi.bind(this)\r\n\t}\r\n\r\n\tubahDeskripsi(e){\r\n\t\te.preventDefault()\r\n\t\tthis.setState({deskripsi: 'Jangan Lemah Tetap Konsentrasi.....Konsentrasi...'})\r\n\r\n\t\tdocument.getElementById(\"sisipkan\").innerHTML = '<button class=\"tombol\" onClick=alert(\"Sebenarnya_Ini_Aja_Permainannya_;)\") >Ganti Permainan ?</button>'\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<center>\r\n\t\t\t<img className=\"App-logo\" src={this.state.url} alt= \"Gambar Hipnotis\" />\r\n\t\t\t<p>{this.state.deskripsi}</p>\r\n\t\t\t<button className=\"tombol\" onClick={(e)=> this.ubahDeskripsi(e)} >Menyerah</button>\r\n\t\t\t<p id=\"sisipkan\" ></p>\r\n\t\t\t</center>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Foto\r\n","import React, { Component } from 'react';\r\n\r\nclass PesanAlert extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tjudul: this.props.judul,\r\n\t\t\tmanfaat: 'Menghilangkan kebiasaan buruk, Menghilangkan kecanduan, rasa lapar, Meningkatkan fokus dan konsentrasi.....'\r\n\t\t}\r\n\r\n\t\tthis.ubahket=this.ubahket.bind(this)\r\n\t}\r\n\r\n\tubahket(e){\r\n\t\te.preventDefault()\r\n\t\tthis.setState({manfaat: 'Menghilangkan kebiasaan buruk, Menghilangkan kecanduan, rasa lapar, Meningkatkan fokus dan konsentrasi, Menyembuhkan amnesia, Menghilangkan pikiran negatif dan trauma'})\r\n\t\t}\r\n\r\n\t\trender(){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"deskrip\" >\r\n\t\t\t\t<p>{this.props.judul}</p>\r\n\t\t\t\t<p>{this.state.manfaat}</p>\r\n\t\t\t\t<button className=\"tombol\" onClick={(e)=> this.ubahket(e)} >Selengkapnya</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n}\r\n\r\nexport default PesanAlert","import React from 'react';\nimport './App.css';\nimport Header from './halaman/header_fungsi1'\nimport Footer from './halaman/footer_fungsi2'\nimport Foto from './halaman/foto_class1'\nimport PesanAlert from './halaman/deskripsi_class2'\n\n\nfunction App() {\n  return (\n    <div className=\"App-header\">\n    <table border=\"2\" ><thead><tr><th></th></tr></thead><tr><td></td></tr><tbody><tr>\n          <td width= \"50%\">\n\t          <Header propsheader=\"HIPNOTIS\" />\n\t      \t  <Foto alamat_gambar=\"https://i.postimg.cc/GmPBmh7Z/hipno.png\" /><\n      \t  /td>\n          <td>\n\t        <PesanAlert judul=\"Manfaat Hipnotis :\" />\n\t          \n          </td>\n        </tr></tbody></table>\n        <Footer propsfooter=\"Copyright Maulana 2020\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}